<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 16a1bdfd1c36108534b5af08dc4b751c7ac0fdaf Maintainer: seros Status: ready -->
<!-- Reviewed: no Maintainer: seros -->

<section xml:id="mongodb.installation" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 &reftitle.install;

 <section xml:id="mongodb.installation.pecl">
  <title>Instalación del Controlador de MongoDB para PHP con PECL</title>

  <para>
   &pecl.info;
   <link xlink:href="&url.pecl.package;mongodb">&url.pecl.package;mongodb</link>
  </para>

  <para>
   Los usuarios de Linux, Unix, y OS X pueden ejecutar el siguiente comando para instalar el
   controlador:
   <programlisting role="shell">
<![CDATA[
$ sudo pecl install mongodb
]]>
   </programlisting>
  </para>

  <para>
   Si su sistema tiene varias versiones de PHP instaladas (p. ej. en macOS,
   Homebrew, <link xlink:href="&url.xampp;">XAMPP</link>), tenga en cuenta
   que cada versión de PHP tiene su propio comando <link linkend="install.pecl">pecl</link>
   y archivo&php.ini;.
  </para>

  <para>
   La instalación del controlador a través de PECL utilizará las versiones incluidas de
   <link xlink:href="&url.mongodb.libbson;">libbson</link> y
   <link xlink:href="&url.mongodb.libmongoc;">libmongoc</link> e intentará
   configurarlos automáticamente.
  </para>

  <note>
   <simpara>
    Si el proceso de compilación no encuentra una biblioteca SSL, compruebe que
    los paquetes de desarrollo (por ej. <literal>libssl-dev</literal>) y
    <link xlink:href="&url.mongodb.wiki.pkg-config;">pkg-config</link> están
    instalados. Si eso no resuelve el problema, considere
    utilizar el proceso de
    <link linkend="mongodb.installation.manual">instalación manual</link>.
   </simpara>
  </note>

  <para>
   Añada la siguiente línea al fichero &php.ini;:
   <programlisting role="ini">
<![CDATA[
extension=mongodb.so
]]>
   </programlisting>
  </para>
 </section>

 <section xml:id="mongodb.installation.homebrew">
  <title>Instalación del Controlador de MongoDB para PHP en macOS con Homebrew</title>

  <para>
   <link xlink:href="https://brew.sh/2018/01/19/homebrew-1.5.0/">Homebrew 1.5.0</link>
   dejó de lado el <link xlink:href="&url.mac.homebrew;">tap Homebrew/php</link>
   y eliminó las fórmulas para las extensiones individuales de PHP. A partir de ahora,
   se aconseja a los usuarios de macOS que instalen la
   <link xlink:href="https://formulae.brew.sh/formula/php">fórmula php</link> y
   sigan las
   <link linkend="mongodb.installation.pecl">instrucciones de instalación estándar de PECL</link>
   utilizando el comando <link linkend="install.pecl">pecl</link> proporcionado por
   la instalación de PHP de Homebrew.
  </para>
 </section>

 <section xml:id="mongodb.installation.windows">
  <title>Instalación del Controlador de MongoDB para PHP en Windows</title>

  <para>
   Hay disponibles binarios precompilados para cada versión en
   <link xlink:href="&url.pecl.package;mongodb">PECL</link> para una variedad de
   combinaciones de versiones, seguridad con hilos, y bibliotecas VC. Extraiga el
   archivo y coloque <filename>php_mongo.dll</filename> en el directorio de extensiones
   de PHP ("ext" predeterminadamente).
  </para>

  <para>
   Añada la siguiente línea al fichero &php.ini;:
   <programlisting role="ini">
<![CDATA[
extension=php_mongo.dll
]]>
   </programlisting>
  </para>

  <note>
   <title>Dependencias DLL adicionales para usuarios de Windows</title>
   <para>
    &ext.windows.path.dll;
    <filename>libsasl.dll</filename>
   </para>
  </note>
 </section>

 <section xml:id="mongodb.installation.manual">
  <title>Instalación manual del Controlador de MongoDB para PHP</title>

  <para>
   Para los desarrolladores de controladores y gente interesada en las últimas correcciones de errores, se puede
   compilar el controlador desde el último código fuente en
   <link xlink:href="&url.mongodb.github;">Github</link>. Ejecute los siguientes
   comandos para clonar y construir el proyecto:
   <programlisting role="shell">
<![CDATA[
$ git clone https://github.com/mongodb/mongo-php-driver.git
$ cd mongo-php-driver
$ git submodule update --init
$ phpize
$ ./configure
$ make all
$ sudo make install
]]>
   </programlisting>
  </para>

  <para>
   El último paso informará sobre dónde ha sido instalado
   <filename>mongodb.so</filename>, similar a:
   <programlisting role="txt">
<![CDATA[
Installing shared extensions:     /usr/lib/php/extensions/debug-non-zts-20151012/
]]>
   </programlisting>
  </para>

  <para>
   Asegúreser de que la opción <link linkend="ini.extension-dir">extension_dir</link>
   de &php.ini; apunta al directorio donde se instaló
   <filename>mongodb.so</filename>. Se puede verificar la opción ejecutando:
   <programlisting role="shell">
<![CDATA[
$ php -i | grep extension_dir
  extension_dir => /usr/lib/php/extensions/debug-non-zts-20151012 =>
                   /usr/lib/php/extensions/debug-non-zts-20151012
]]>
   </programlisting>
  </para>

  <para>
   Si los directorios difieren, cambie
   <link linkend="ini.extension-dir">extension_dir</link> de &php.ini; o
   mueva manualmente <filename>mongodb.so</filename> al directorio correcto.
  </para>

  <para>
   Añada la siguiente línea al fichero &php.ini;:
   <programlisting role="ini">
<![CDATA[
extension=mongodb.so
]]>
   </programlisting>
  </para>
 </section>

 <section xml:id="mongodb.installation.hhvm">
  <title>Instalación manual de Controlador de MongoDB para HHVM</title>

  <para>
   En el momento de escribir esto, HHVM no posee un gestor de paquetes para
   extensiones. Descargue el último controlador desde
   <link xlink:href="&url.mongodb.hhvm.releases;">GitHub</link>. De forma alternativa,
   se puede clonar el repositorio para construir el último código fuente:
   <programlisting role="shell">
<![CDATA[
$ git clone https://github.com/mongodb/mongo-hhvm-driver.git
$ cd mongo-hhvm-driver
$ git submodule sync && git submodule update --init --recursive
]]>
   </programlisting>
  </para>

  <para>
   Configurar los ficheros make ejecutando:
   <programlisting role="shell">
<![CDATA[
$ hphpize
$ cmake .
]]>
   </programlisting>
  </para>

  <para>
   Genere los ficheros <code>configure</code> para las bibliotecas incluidas. Para que
   esto funcione, es necesario tener instalados los paquetes
   <code>automake</code>, <code>autoconf</code>, y <code>libtool</code> (p.ej.
   mediante <code>apt-get</code>).
   <programlisting role="shell">
<![CDATA[
$ make configlib
]]>
   </programlisting>
  </para>

  <para>
   Construya e instale el controlador ejecutando:
   <programlisting role="shell">
<![CDATA[
$ make -j 5
$ sudo make install
]]>
   </programlisting>
  </para>

  <note>
   <para>
    Si el comando <code>hphpize</code> no está disponible, será necesario
    compilar HHVM desde el código fuente o instalar el paquete <code>hhvm-dev</code>
    (p.ej. mediante <code>apt-get</code>).
   </para>
  </note>

  <para>
   El último paso informará sobre dónde ha sido instalado
   <filename>mongodb.so</filename>, similar a:
   <programlisting role="txt">
<![CDATA[
Installing:     /usr/local/hhvm/3.9.1/lib/hhvm/extensions/20150212/mongodb.so
]]>
   </programlisting>
  </para>

  <para>
   Añada la siguiente línea al fichero &php.ini; (normalmente se encuentra en "/etc/hhvm"):
   <programlisting role="ini">
<![CDATA[
hhvm.dynamic_extension_path=/usr/local/hhvm/3.9.1/lib/hhvm/extensions/20150212
hhvm.dynamic_extensions[mongodb]=mongodb.so
]]>
   </programlisting>
  </para>
 </section>

</section>


<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
